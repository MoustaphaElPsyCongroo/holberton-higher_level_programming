Function that adds two integers
	>>> add_integer = __import__("0-add_integer").add_integer

Normal case, a and b both integers:
	>>> add_integer(1, 2)
	3

a or b not int:
	>>> add_integer("1", 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(1, "2")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

a or b float:
	>>> add_integer(1.5, 2)
	3

	>>> add_integer(1, 2.5)
	3

a or b None:
	>>> add_integer(None, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer
	>>> add_integer(2, None)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

missing one argument:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'


float overflow:
	>>> add_integer(float('inf'), 2)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

trying to cast NaN to float:
	>>> add_integer(float('NaN'), 2)
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
